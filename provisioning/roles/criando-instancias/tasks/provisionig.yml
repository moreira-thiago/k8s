- name: 'Criando sec grpup'
  local_action:
    module: ec2_group
    name: "{{ sec_group_name }}"
    description: sg Services
    profile: "{{ profile }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: Acesso via SSH
      - proto: tcp
        from_port: 2379
        to_port: 2380
        cidr_ip: 0.0.0.0/0
        rule_desc: ETCD Server API
      - proto: tcp
        from_port: 6443
        to_port: 6443
        cidr_ip: 0.0.0.0/0
        rule_desc: Kube API Server
      - proto: tcp
        from_port: 10250
        to_port: 10250
        cidr_ip: 0.0.0.0/0
        rule_desc: Kube Scheduler
      - proto: tcp
        from_port: 10251
        to_port: 10251
        cidr_ip: 0.0.0.0/0
        rule_desc: Kubelet API
      - proto: tcp
        from_port: 10252
        to_port: 10252
        cidr_ip: 0.0.0.0/0
        rule_desc: Kube Controller Manager
      - proto: tcp
        from_port: 10255
        to_port: 10255
        cidr_ip: 0.0.0.0/0
        rule_desc: Kubelet API Read-Only
      - proto: tcp
        from_port: 30000
        to_port: 32767
        cidr_ip: 0.0.0.0/0
        rule_desc: NodePort Services
      - proto: tcp
        from_port: 6783
        to_port: 6783
        cidr_ip: 0.0.0.0/0
        rule_desc: WeaveNet
      - proto: tcp
        from_port: 32111
        to_port: 32111
        cidr_ip: 0.0.0.0/0
        rule_desc: GiropopsAppPrometheus
      - proto: tcp
        from_port: 32222
        to_port: 32222
        cidr_ip: 0.0.0.0/0
        rule_desc: GiropopsApp
      - proto: udp
        from_port: 6783
        to_port: 6783
        cidr_ip: 0.0.0.0/0
        rule_desc: WeaveNet
      - proto: udp
        from_port: 6784
        to_port: 6784
        cidr_ip: 0.0.0.0/0
        rule_desc: WeaveNet
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewaal

- name: 'Criar instancias'
  local_action: ec2
    group={{ sec_group_name }}
    instance_type={{ instance_type }}
    image={{ image }}
    profile={{ profile }}
    wait=true
    region={{ region }}
    count={{ count }}
    key_name={{ keypair }}
  register: ec2

- name: Adicionando a instancia ao inventario temp
  add_host: name={{ item. public_ip }} groups=giropops-new
  with_items: "{{ ec2.instances }}"

- name: Adicionando o IP publico da instancia criada ao arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.public_ip }}
    insertafter="[kubernetes]"  line={{ item.public_ip }}
  with_items: "{{ ec2.instances }}"

- name: Adicionando o IP privado da instancia criada ao arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.private_ip }}
    insertafter="[kubernetes]" line={{ item.private_ip }}
  with_items: "{{ ec2.instances }}"

- name: Esperando o SSH
  local_action: wait_for
    host={{ item.public_ip }}
    port=22
    state=started
  with_items: "{{ ec2.instances }}"

- name: Adicionando uma tag na instancia
  local_action: ec2_tag
    resource={{ item.id }}
    region={{ region }}
    profile={{ profile }}
    state=present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      name: "ansible-{{ item.ami_launch_index|int +1 }}"

- name: Adicionar tag "Name" às instâncias
  ec2_tag:
    resource: "{{ item.id }}"
    region: "{{ region }}"
    profile: "{{ profile }}"
    state: present
    tags:
      Name: "ansible-{{ item.ami_launch_index|int + 1 }}"
  with_items: "{{ ec2.instances }}"